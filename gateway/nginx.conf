upstream ai-server {
    server ai-server:5000;
}

upstream enterprise-service {
    server enterprise-service:3000;
}

server {
    listen 80;
    server_name localhost;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # AI Analysis Service Routes
    location /api/v1/analyze {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://ai-server/analyze;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # GraphQL endpoint
    location /graphql {
        limit_req zone=api burst=30 nodelay;
        proxy_pass http://ai-server/graphql;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for subscriptions
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 300s;
    }

    # WebSocket endpoint for real-time features
    location /ws {
        proxy_pass http://ai-server/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 300s;
    }

    # Enterprise Service Routes
    location /api/v1/auth {
        limit_req zone=auth burst=10 nodelay;
        proxy_pass http://enterprise-service/auth;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/v1/admin {
        limit_req zone=api burst=15 nodelay;
        proxy_pass http://enterprise-service/admin;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/v1/users {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://enterprise-service/users;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Metrics endpoint for monitoring
    location /metrics {
        proxy_pass http://ai-server/metrics;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Restrict access to monitoring systems
        allow 172.20.0.0/16;  # Docker network
        allow 127.0.0.1;
        deny all;
    }

    # Default route - return API information
    location / {
        return 200 '{"service":"CodeSaviour API Gateway","version":"1.0.0","status":"healthy","endpoints":["/api/v1/analyze","/graphql","/api/v1/auth","/api/v1/admin","/ws"]}';
        add_header Content-Type application/json;
    }

    # Error pages
    error_page 404 /404.json;
    location = /404.json {
        return 404 '{"error":"Not Found","message":"The requested endpoint does not exist"}';
        add_header Content-Type application/json;
    }

    error_page 500 502 503 504 /50x.json;
    location = /50x.json {
        return 500 '{"error":"Internal Server Error","message":"Service temporarily unavailable"}';
        add_header Content-Type application/json;
    }
}